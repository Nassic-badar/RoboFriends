{"version":3,"sources":["Components/SearchBox.js","Components/Card.js","Components/Cardlist.js","Components/Scroll.js","Components/ErrorBoundry.js","Container/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","name","email","id","alt","src","Cardlist","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACA,qBAAKC,UAAU,MAAf,SACG,uBACAA,UAAU,mCACVC,KAAK,SACLC,YAAY,qBACZC,SAAYJ,OCKDK,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACC,sBAAKP,UAAU,sDAAf,UACE,qBAAMQ,IAAI,SAASC,IAAG,+BAA0BF,EAA1B,cACtB,gCACE,6BAAKF,IACL,4BAAIC,WCcKI,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACI,8BAEKA,EAAOC,KAAI,SAACC,EAAMC,GACvB,OACE,cAAC,EAAD,CAEGP,GAAII,EAAOG,GAAGP,GACdF,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCAAC,EARA,SAACC,GACf,OACA,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACCJ,EAAMK,YCiBOC,E,kDAnBd,aAAe,IAAD,8BACb,gBACKC,MAAQ,CACXC,UAAW,GAHA,E,qDAMX,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAI1B,WACC,OAAGG,KAAKJ,MAAMC,SACN,+DAEDG,KAAKX,MAAMK,a,GAhBIQ,aC+CZC,G,wDAxCd,aAAe,IAAD,8BACX,gBAcHC,eAAiB,SAACC,GACf,EAAKJ,SAAS,CAAE9B,YAAakC,EAAMC,OAAOC,SAd1C,EAAKX,MAAQ,CACXZ,OAAQ,GACRb,YAAa,IAJJ,E,qDAQb,WAAqB,IAAD,OAClBqC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAG,EAAKX,SAAS,CAACjB,OAAO4B,S,oBAQtC,WAAU,IAAD,EACyBZ,KAAKJ,MAA5BzB,EADF,EACEA,YAAaa,EADf,EACeA,OACf6B,EAAiB7B,EAAO8B,QAAO,SAAAC,GACpC,OAAOA,EAAMrC,KAAKsC,cAAcC,SAAS9C,EAAY6C,kBAErD,OAAQhC,EAAOkC,OAGhB,sBAAK7C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAc4B,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAUpB,OAAQ6B,WAPhB,6C,GA1BWX,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.76449807.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t<div className='pa2'>\r\n    <input \r\n    className='pa2 ba b--green bg-lightest-blue'\r\n    type='search' \r\n    placeholder='search robofriends' \r\n    onChange = {searchChange}\r\n    />\r\n    </div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn(\r\n\t\t<div className='tc bg-light-green dib br3 pa3 mr2 grow bw2 shadow-5'>\r\n\t\t  <img  alt='robots' src={`https://robohash.org/${id}?200x200`}  />\r\n\t\t  <div>\r\n\t\t    <h2>{name}</h2>\r\n\t\t    <p>{email}</p>\r\n\t\t   </div>\r\n\t\t   </div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist = ({robots}) => {\r\n\treturn(\r\n\t    <div>\r\n          {\r\n          robots.map((user, i) => { \r\n\t    return (\r\n\t      <Card\r\n\t         key={i} \r\n\t         id={robots[i].id} \r\n\t         name={robots[i].name} \r\n\t         email={robots[i].email}\r\n\t       />\r\n        );\r\n   })\r\n          }\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t<div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\r\n\t{props.children}\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t  hasError : false\r\n\t\t}\r\n\t}\r\n    componentDidCatch(error, info) {\r\n    \tthis.setState({hasError: false})\r\n    }\r\n\r\n\r\n    render(){\r\n    \tif(this.state.hasError) {\r\n    \t\treturn <h1> Oooooops , that is not good </h1>\r\n    \t}\r\n    \treturn this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Cardlist from '../Components/Cardlist';\r\nimport Scroll from '../Components/Scroll'\r\nimport ErrorBoundry from '../Components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users =>this.setState({robots:users}));\r\n  }\r\n\r\n\r\n\tonSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  render() { \r\n      const {searchfield, robots} = this.state;\r\n    \tconst filteredRobots = robots.filter(robot => { \r\n    \t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    \t})\r\n      return !robots.length? \r\n       <h1>Loading</h1> :\r\n       (\r\n     <div className='tc'>\r\n     <h1 className='f1'>RoboFriends</h1>\r\n     <SearchBox searchChange={this.onSearchChange}/>\r\n     <Scroll>\r\n     <ErrorBoundry>\r\n     <Cardlist robots={filteredRobots} />\r\n     </ErrorBoundry>\r\n     </Scroll>\r\n     </div>\r\n      );\r\n     }\r\n\t}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Container/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}